//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Updater.UpdaterServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalSystemInfo", Namespace="http://schemas.datacontract.org/2004/07/UpdaterService.Models")]
    [System.SerializableAttribute()]
    public partial class LocalSystemInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClientTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CpuFanRPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpuModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CpuTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float CpuUsagePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DaylightSavingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FanRPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FreeRamSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GateWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HddFreeSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HddTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HddTotalSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Updater.UpdaterServiceReference.OsType OsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RamSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClientTime {
            get {
                return this.ClientTimeField;
            }
            set {
                if ((this.ClientTimeField.Equals(value) != true)) {
                    this.ClientTimeField = value;
                    this.RaisePropertyChanged("ClientTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CpuFanRPM {
            get {
                return this.CpuFanRPMField;
            }
            set {
                if ((this.CpuFanRPMField.Equals(value) != true)) {
                    this.CpuFanRPMField = value;
                    this.RaisePropertyChanged("CpuFanRPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CpuModel {
            get {
                return this.CpuModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CpuModelField, value) != true)) {
                    this.CpuModelField = value;
                    this.RaisePropertyChanged("CpuModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CpuTemperature {
            get {
                return this.CpuTemperatureField;
            }
            set {
                if ((this.CpuTemperatureField.Equals(value) != true)) {
                    this.CpuTemperatureField = value;
                    this.RaisePropertyChanged("CpuTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float CpuUsagePercent {
            get {
                return this.CpuUsagePercentField;
            }
            set {
                if ((this.CpuUsagePercentField.Equals(value) != true)) {
                    this.CpuUsagePercentField = value;
                    this.RaisePropertyChanged("CpuUsagePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DaylightSaving {
            get {
                return this.DaylightSavingField;
            }
            set {
                if ((this.DaylightSavingField.Equals(value) != true)) {
                    this.DaylightSavingField = value;
                    this.RaisePropertyChanged("DaylightSaving");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayResolution {
            get {
                return this.DisplayResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayResolutionField, value) != true)) {
                    this.DisplayResolutionField = value;
                    this.RaisePropertyChanged("DisplayResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FanRPM {
            get {
                return this.FanRPMField;
            }
            set {
                if ((this.FanRPMField.Equals(value) != true)) {
                    this.FanRPMField = value;
                    this.RaisePropertyChanged("FanRPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FreeRamSize {
            get {
                return this.FreeRamSizeField;
            }
            set {
                if ((this.FreeRamSizeField.Equals(value) != true)) {
                    this.FreeRamSizeField = value;
                    this.RaisePropertyChanged("FreeRamSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GateWay {
            get {
                return this.GateWayField;
            }
            set {
                if ((object.ReferenceEquals(this.GateWayField, value) != true)) {
                    this.GateWayField = value;
                    this.RaisePropertyChanged("GateWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HddFreeSpace {
            get {
                return this.HddFreeSpaceField;
            }
            set {
                if ((this.HddFreeSpaceField.Equals(value) != true)) {
                    this.HddFreeSpaceField = value;
                    this.RaisePropertyChanged("HddFreeSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HddTemperature {
            get {
                return this.HddTemperatureField;
            }
            set {
                if ((this.HddTemperatureField.Equals(value) != true)) {
                    this.HddTemperatureField = value;
                    this.RaisePropertyChanged("HddTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HddTotalSpace {
            get {
                return this.HddTotalSpaceField;
            }
            set {
                if ((this.HddTotalSpaceField.Equals(value) != true)) {
                    this.HddTotalSpaceField = value;
                    this.RaisePropertyChanged("HddTotalSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsName {
            get {
                return this.OsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OsNameField, value) != true)) {
                    this.OsNameField = value;
                    this.RaisePropertyChanged("OsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Updater.UpdaterServiceReference.OsType OsType {
            get {
                return this.OsTypeField;
            }
            set {
                if ((this.OsTypeField.Equals(value) != true)) {
                    this.OsTypeField = value;
                    this.RaisePropertyChanged("OsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RamSize {
            get {
                return this.RamSizeField;
            }
            set {
                if ((this.RamSizeField.Equals(value) != true)) {
                    this.RamSizeField = value;
                    this.RaisePropertyChanged("RamSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OsType", Namespace="http://schemas.datacontract.org/2004/07/UpdaterService.Models")]
    public enum OsType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _32bit = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        _64bit = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateAppInfo", Namespace="http://schemas.datacontract.org/2004/07/UpdaterService")]
    [System.SerializableAttribute()]
    public partial class UpdateAppInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewFeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool extractZipFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Updater.UpdaterServiceReference.UpdateFileInfo[] filesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Updater.UpdaterServiceReference.UpdateVersionPriority updatePriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewFeatures {
            get {
                return this.NewFeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFeaturesField, value) != true)) {
                    this.NewFeaturesField = value;
                    this.RaisePropertyChanged("NewFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool extractZipFiles {
            get {
                return this.extractZipFilesField;
            }
            set {
                if ((this.extractZipFilesField.Equals(value) != true)) {
                    this.extractZipFilesField = value;
                    this.RaisePropertyChanged("extractZipFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Updater.UpdaterServiceReference.UpdateFileInfo[] files {
            get {
                return this.filesField;
            }
            set {
                if ((object.ReferenceEquals(this.filesField, value) != true)) {
                    this.filesField = value;
                    this.RaisePropertyChanged("files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Updater.UpdaterServiceReference.UpdateVersionPriority updatePriority {
            get {
                return this.updatePriorityField;
            }
            set {
                if ((this.updatePriorityField.Equals(value) != true)) {
                    this.updatePriorityField = value;
                    this.RaisePropertyChanged("updatePriority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFileInfo", Namespace="http://schemas.datacontract.org/2004/07/UpdaterService")]
    [System.SerializableAttribute()]
    public partial class UpdateFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblyVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndPartIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsZippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverwriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartPartIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyVersion {
            get {
                return this.AssemblyVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyVersionField, value) != true)) {
                    this.AssemblyVersionField = value;
                    this.RaisePropertyChanged("AssemblyVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delete {
            get {
                return this.DeleteField;
            }
            set {
                if ((this.DeleteField.Equals(value) != true)) {
                    this.DeleteField = value;
                    this.RaisePropertyChanged("Delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndPartId {
            get {
                return this.EndPartIdField;
            }
            set {
                if ((this.EndPartIdField.Equals(value) != true)) {
                    this.EndPartIdField = value;
                    this.RaisePropertyChanged("EndPartId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsZipped {
            get {
                return this.IsZippedField;
            }
            set {
                if ((this.IsZippedField.Equals(value) != true)) {
                    this.IsZippedField = value;
                    this.RaisePropertyChanged("IsZipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedTime {
            get {
                return this.ModifiedTimeField;
            }
            set {
                if ((this.ModifiedTimeField.Equals(value) != true)) {
                    this.ModifiedTimeField = value;
                    this.RaisePropertyChanged("ModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Overwrite {
            get {
                return this.OverwriteField;
            }
            set {
                if ((this.OverwriteField.Equals(value) != true)) {
                    this.OverwriteField = value;
                    this.RaisePropertyChanged("Overwrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartPartId {
            get {
                return this.StartPartIdField;
            }
            set {
                if ((this.StartPartIdField.Equals(value) != true)) {
                    this.StartPartIdField = value;
                    this.RaisePropertyChanged("StartPartId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateVersionPriority", Namespace="http://schemas.datacontract.org/2004/07/UpdaterService.Models")]
    public enum UpdateVersionPriority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeryHigh = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UpdaterServiceReference.IUpdateService")]
    public interface IUpdateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/SelfUpdateNeeded", ReplyAction="http://tempuri.org/IUpdateService/SelfUpdateNeededResponse")]
        Updater.UpdaterServiceReference.SelfUpdateNeededResponse SelfUpdateNeeded(Updater.UpdaterServiceReference.SelfUpdateNeededRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/SelfUpdateNeeded", ReplyAction="http://tempuri.org/IUpdateService/SelfUpdateNeededResponse")]
        System.Threading.Tasks.Task<Updater.UpdaterServiceReference.SelfUpdateNeededResponse> SelfUpdateNeededAsync(Updater.UpdaterServiceReference.SelfUpdateNeededRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/GetFileBlock", ReplyAction="http://tempuri.org/IUpdateService/GetFileBlockResponse")]
        Updater.UpdaterServiceReference.GetFileBlockResponse GetFileBlock(Updater.UpdaterServiceReference.GetFileBlockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/GetFileBlock", ReplyAction="http://tempuri.org/IUpdateService/GetFileBlockResponse")]
        System.Threading.Tasks.Task<Updater.UpdaterServiceReference.GetFileBlockResponse> GetFileBlockAsync(Updater.UpdaterServiceReference.GetFileBlockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/GetUpdateInfo", ReplyAction="http://tempuri.org/IUpdateService/GetUpdateInfoResponse")]
        Updater.UpdaterServiceReference.GetUpdateInfoResponse GetUpdateInfo(Updater.UpdaterServiceReference.GetUpdateInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/GetUpdateInfo", ReplyAction="http://tempuri.org/IUpdateService/GetUpdateInfoResponse")]
        System.Threading.Tasks.Task<Updater.UpdaterServiceReference.GetUpdateInfoResponse> GetUpdateInfoAsync(Updater.UpdaterServiceReference.GetUpdateInfoRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelfUpdateNeeded", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelfUpdateNeededRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string JsonInput;
        
        public SelfUpdateNeededRequest() {
        }
        
        public SelfUpdateNeededRequest(string JsonInput) {
            this.JsonInput = JsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelfUpdateNeededResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SelfUpdateNeededResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Nullable<bool> SelfUpdateNeededResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public SelfUpdateNeededResponse() {
        }
        
        public SelfUpdateNeededResponse(System.Nullable<bool> SelfUpdateNeededResult, string error) {
            this.SelfUpdateNeededResult = SelfUpdateNeededResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileBlock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFileBlockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string JsonInput;
        
        public GetFileBlockRequest() {
        }
        
        public GetFileBlockRequest(string JsonInput) {
            this.JsonInput = JsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileBlockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFileBlockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetFileBlockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public GetFileBlockResponse() {
        }
        
        public GetFileBlockResponse(string GetFileBlockResult, string error) {
            this.GetFileBlockResult = GetFileBlockResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUpdateInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUpdateInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AppName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public Updater.UpdaterServiceReference.LocalSystemInfo localSystemInfo;
        
        public GetUpdateInfoRequest() {
        }
        
        public GetUpdateInfoRequest(string AppName, Updater.UpdaterServiceReference.LocalSystemInfo localSystemInfo) {
            this.AppName = AppName;
            this.localSystemInfo = localSystemInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUpdateInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUpdateInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Updater.UpdaterServiceReference.UpdateAppInfo GetUpdateInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public GetUpdateInfoResponse() {
        }
        
        public GetUpdateInfoResponse(Updater.UpdaterServiceReference.UpdateAppInfo GetUpdateInfoResult, string error) {
            this.GetUpdateInfoResult = GetUpdateInfoResult;
            this.error = error;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpdateServiceChannel : Updater.UpdaterServiceReference.IUpdateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateServiceClient : System.ServiceModel.ClientBase<Updater.UpdaterServiceReference.IUpdateService>, Updater.UpdaterServiceReference.IUpdateService {
        
        public UpdateServiceClient() {
        }
        
        public UpdateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpdateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Updater.UpdaterServiceReference.SelfUpdateNeededResponse Updater.UpdaterServiceReference.IUpdateService.SelfUpdateNeeded(Updater.UpdaterServiceReference.SelfUpdateNeededRequest request) {
            return base.Channel.SelfUpdateNeeded(request);
        }
        
        public System.Nullable<bool> SelfUpdateNeeded(string JsonInput, out string error) {
            Updater.UpdaterServiceReference.SelfUpdateNeededRequest inValue = new Updater.UpdaterServiceReference.SelfUpdateNeededRequest();
            inValue.JsonInput = JsonInput;
            Updater.UpdaterServiceReference.SelfUpdateNeededResponse retVal = ((Updater.UpdaterServiceReference.IUpdateService)(this)).SelfUpdateNeeded(inValue);
            error = retVal.error;
            return retVal.SelfUpdateNeededResult;
        }
        
        public System.Threading.Tasks.Task<Updater.UpdaterServiceReference.SelfUpdateNeededResponse> SelfUpdateNeededAsync(Updater.UpdaterServiceReference.SelfUpdateNeededRequest request) {
            return base.Channel.SelfUpdateNeededAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Updater.UpdaterServiceReference.GetFileBlockResponse Updater.UpdaterServiceReference.IUpdateService.GetFileBlock(Updater.UpdaterServiceReference.GetFileBlockRequest request) {
            return base.Channel.GetFileBlock(request);
        }
        
        public string GetFileBlock(string JsonInput, out string error) {
            Updater.UpdaterServiceReference.GetFileBlockRequest inValue = new Updater.UpdaterServiceReference.GetFileBlockRequest();
            inValue.JsonInput = JsonInput;
            Updater.UpdaterServiceReference.GetFileBlockResponse retVal = ((Updater.UpdaterServiceReference.IUpdateService)(this)).GetFileBlock(inValue);
            error = retVal.error;
            return retVal.GetFileBlockResult;
        }
        
        public System.Threading.Tasks.Task<Updater.UpdaterServiceReference.GetFileBlockResponse> GetFileBlockAsync(Updater.UpdaterServiceReference.GetFileBlockRequest request) {
            return base.Channel.GetFileBlockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Updater.UpdaterServiceReference.GetUpdateInfoResponse Updater.UpdaterServiceReference.IUpdateService.GetUpdateInfo(Updater.UpdaterServiceReference.GetUpdateInfoRequest request) {
            return base.Channel.GetUpdateInfo(request);
        }
        
        public Updater.UpdaterServiceReference.UpdateAppInfo GetUpdateInfo(string AppName, Updater.UpdaterServiceReference.LocalSystemInfo localSystemInfo, out string error) {
            Updater.UpdaterServiceReference.GetUpdateInfoRequest inValue = new Updater.UpdaterServiceReference.GetUpdateInfoRequest();
            inValue.AppName = AppName;
            inValue.localSystemInfo = localSystemInfo;
            Updater.UpdaterServiceReference.GetUpdateInfoResponse retVal = ((Updater.UpdaterServiceReference.IUpdateService)(this)).GetUpdateInfo(inValue);
            error = retVal.error;
            return retVal.GetUpdateInfoResult;
        }
        
        public System.Threading.Tasks.Task<Updater.UpdaterServiceReference.GetUpdateInfoResponse> GetUpdateInfoAsync(Updater.UpdaterServiceReference.GetUpdateInfoRequest request) {
            return base.Channel.GetUpdateInfoAsync(request);
        }
    }
}
